<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
                    xmlns:local="clr-namespace:takojsnje_sporocanje">
    <Style TargetType="StackPanel" x:Key="PopUpStackPanel">
        <Style.Setters>
            <Setter Property="Orientation" Value="Vertical"/>
            <Setter Property="Background" Value="AliceBlue"/>
        </Style.Setters>
    </Style>

    <Style TargetType="StackPanel" x:Key="PopUpStackPanelSmall">
        <Style.Setters>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="5"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Label" x:Key="PupUpLabel">
        <Style.Setters>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style TargetType="TextBox" x:Key="PupUpTextBox">
        <Style.Setters>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="PopUpImageButton">
        <Style.Setters>
            <Setter Property="Width" Value="55"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Image" x:Key="PopUpImage">
        <Style.Setters>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Source" Value="{Binding Avatar}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Label" x:Key="ImageDescriptor">
        <Style.Setters>
            <Setter Property="Width" Value="135"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10 0 0 0"/>
        </Style.Setters>
    </Style>

    <Style TargetType="StackPanel" x:Key="PopUpStackPanelExitButtons">
        <Style.Setters>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="5 50 5 5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="ConfirmButton">
        <Style.Setters>
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
            <Setter Property="IsDefault" Value="true"/>
            <Setter Property="Content" Value="V redu"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGreen" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="CancelButton">
        <Style.Setters>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
            <Setter Property="IsDefault" Value="true"/>
            <Setter Property="Content" Value="Prekliči"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkRed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" x:Key="PopUpComboBox">
        <Style.Setters>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style TargetType="DatePicker" x:Key="PopUpDatePicker">
        <Style.Setters>
            <Setter Property="Width" Value="200"/>
            <Setter Property="SelectedDateFormat" Value="Long"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="PopUpImagePicker">
        <Style.Setters>
            <Setter Property="Width" Value="75"/>
            <Setter Property="Content" Value="Izberi sliko"/>
        </Style.Setters>
    </Style>

    <Style TargetType="CheckBox" x:Key="PopUpCheckBox">
        <Style.Setters>
            <Setter Property="Margin" Value="0 7 0 0"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Canvas" x:Key="ChatBoxMainCanvas">
        <Style.Setters>
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl, AncestorLevel=1}, Path=ActualWidth}"/>
            <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl, AncestorLevel=1}, Path=ActualHeight}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="DockPanel" x:Key="ChatBoxMainDockPanel">
        <Style.Setters>
            <Setter Property="Canvas.Left" Value="0"/>
            <Setter Property="Canvas.Top" Value="0"/>
            <Setter Property="Width" Value="{Binding ActualWidth, ElementName=parent}"/>
            <Setter Property="Height" Value="{Binding ActualHeight, ElementName=parent}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="DockPanel" x:Key="ChatBoxInnerDockPanel">
        <Style.Setters>
            <Setter Property="DockPanel.Dock" Value="Bottom"/>
            <Setter Property="Margin" Value="5"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="ChatBoxSendMessageButton">
        <Style.Setters>
            <Setter Property="DockPanel.Dock" Value="Right"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Image" x:Key="ChatBoxSendMessageImage">
        <Style.Setters>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Source" Value="/images/send_icon.png"/>
        </Style.Setters>
    </Style>

    <Style TargetType="emoji:Picker" x:Key="ChatBoxEmojiPicker">
        <Style.Setters>
            <Setter Property="Margin" Value="5 0 5 0"/>
            <Setter Property="DockPanel.Dock" Value="Right"/>
        </Style.Setters>
    </Style>

    <Style TargetType="TextBox" x:Key="ChatBoxTextBox">
        <Style.Setters>
            <Setter Property="DockPanel.Dock" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Border" x:Key="ChatBoxBorder">
        <Style.Setters>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="Padding" Value="10 0 0 0"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Background" Value="Ivory"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Label" x:Key="ChatBoxHistory">
        <Style.Setters>
            <Setter Property="Content" Value="{Binding GetConversation}"/>
            <Setter Property="Background" Value="Azure"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Canvas" x:Key="ChatBoxInnerCanvas">
        <Style.Setters>
            <Setter Property="Canvas.Top" Value="27"/>
            <Setter Property="Canvas.Left" Value="0"/>
            <Setter Property="Width" Value="275"/>
            <Setter Property="Height" Value="262"/>
        </Style.Setters>
    </Style>

    <PathGeometry x:Key="Lik">
        <PathFigure IsClosed="True" StartPoint="20, 80">
            <PolyLineSegment Points="60,60 90,75 75,45 95,5 115,45 100,75 130,60 170,80 130,100 100,85 115,115 95,155 75,115 90,85 60,100"/>
        </PathFigure>
    </PathGeometry>

    <Style TargetType="Image" x:Key="ChatBoxNoChatImage">
        <Style.Setters>
            <Setter Property="Source" Value="images/no_chat.png"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Visibility" Value="Hidden"/>
        </Style.Setters>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Image.Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimationUsingPath Source="X" Storyboard.TargetProperty="(Canvas.Right)" Duration="0:0:15" PathGeometry="{StaticResource Lik}"/>
                        <DoubleAnimationUsingPath Source="Y" Storyboard.TargetProperty="(Canvas.Bottom)" Duration="0:0:15" PathGeometry="{StaticResource Lik}"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <DataTrigger Binding="{Binding CurrentContact}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Menu" x:Key="ViewMenu">
        <Style.Setters>
            <Setter Property="Grid.ColumnSpan" Value="2"/>
        </Style.Setters>
    </Style>

    <Style TargetType="DockPanel" x:Key="ViewDockPanelOg">
        <Style.Setters>
            <Setter Property="Grid.Row" Value="1"/>
        </Style.Setters>
    </Style>

    <Style TargetType="StackPanel" x:Key="ViewStackPanel">
        <Style.Setters>
            <Setter Property="DockPanel.Dock" Value="Bottom"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="Ivory"/>
        </Style.Setters>
    </Style>

    <Storyboard x:Key="ImageEnter">
        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" Duration="0:0:1" From="0" To="360" RepeatBehavior="Forever"/>
    </Storyboard>

    <Storyboard x:Key="ImageLeave">
        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" Duration="0:0:0" To="360"/>
    </Storyboard>

    <Style TargetType="Image" x:Key="ViewAvatarImage">
        <Style.Setters>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Image.RenderTransform">
                <Setter.Value>
                    <RotateTransform CenterX="16" CenterY="16" />
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard Storyboard="{StaticResource ImageEnter}"/>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard Storyboard="{StaticResource ImageLeave}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Label" x:Key="ViewAvatarName">
        <Style.Setters>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style TargetType="ListView" x:Key="ViewListView">
        <Style.Setters>
            <Setter Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="ItemsSource" Value="{Binding Contacts}"/>
            <Setter Property="SelectedItem" Value="{Binding CurrentContact}"/>
            <Setter Property="Background" Value="Snow"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Image" x:Key="ViewContactImage">
        <Style.Setters>
            <Setter Property="Width" Value="25"/>
            <Setter Property="DockPanel.Dock" Value="Left"/>
            <Setter Property="Source" Value="{Binding Avatar}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Ellipse" x:Key="ViewContactStatus">
        <Style.Setters>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Fill" Value="Black"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Label" x:Key="ViewContactName">
        <Style.Setters>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Content" Value="{Binding Name}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="local:ChatBox" x:Key="ViewOgChatBox">
        <Style.Setters>
            <Setter Property="Grid.Row" Value="1"/>
            <Setter Property="Grid.Column" Value="2"/>
            <Setter Property="DataContext" Value="{Binding CurrentContact}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="local:ChatBox" x:Key="ViewNewChatBox">
        <Style.Setters>
            <Setter Property="Grid.Row" Value="1"/>
            <Setter Property="DataContext" Value="{Binding CurrentContact}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="DockPanel" x:Key="ViewDockPanelNew">
        <Style.Setters>
            <Setter Property="Grid.Row" Value="1"/>
            <Setter Property="Grid.Column" Value="2"/>
        </Style.Setters>
    </Style>

    <Style TargetType="ContentControl" x:Key="MainView">
        <Style.Setters>
            <Setter Property="Content" Value="{Binding UC}"/>
        </Style.Setters>
    </Style>
</ResourceDictionary>